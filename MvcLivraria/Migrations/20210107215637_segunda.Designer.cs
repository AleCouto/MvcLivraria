// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcLivraria.Data;

namespace MvcLivraria.Migrations
{
    [DbContext(typeof(MvcLivrariaContext))]
    [Migration("20210107215637_segunda")]
    partial class segunda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MvcLivraria.Models.Autor", b =>
                {
                    b.Property<int>("autorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Lingua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nomeautor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("autorId");

                    b.ToTable("Autor");

                    b.HasData(
                        new
                        {
                            autorId = 1,
                            Lingua = "português",
                            Nomeautor = "Jose Saramago",
                            Pais = "Portugal"
                        },
                        new
                        {
                            autorId = 2,
                            Lingua = "português",
                            Nomeautor = "Fernando Pessoa",
                            Pais = "Portugal"
                        },
                        new
                        {
                            autorId = 3,
                            Lingua = "português",
                            Nomeautor = "Eça de Queirós",
                            Pais = "Portugal"
                        },
                        new
                        {
                            autorId = 4,
                            Lingua = "português",
                            Nomeautor = "Miguel Torga",
                            Pais = "Portugal"
                        });
                });

            modelBuilder.Entity("MvcLivraria.Models.Autoria", b =>
                {
                    b.Property<int>("AutoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.HasKey("AutoriaId");

                    b.HasIndex("AutorId");

                    b.HasIndex("LivroId");

                    b.ToTable("Autoria");

                    b.HasData(
                        new
                        {
                            AutoriaId = 1,
                            AutorId = 1,
                            LivroId = 1
                        },
                        new
                        {
                            AutoriaId = 2,
                            AutorId = 2,
                            LivroId = 2
                        },
                        new
                        {
                            AutoriaId = 3,
                            AutorId = 3,
                            LivroId = 3
                        },
                        new
                        {
                            AutoriaId = 4,
                            AutorId = 4,
                            LivroId = 4
                        });
                });

            modelBuilder.Entity("MvcLivraria.Models.Editora", b =>
                {
                    b.Property<int>("EditoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeEditora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroPorta")
                        .HasColumnType("int");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EditoraId");

                    b.ToTable("Editora");

                    b.HasData(
                        new
                        {
                            EditoraId = 1,
                            CodigoPostal = 4099023,
                            Email = "porto@porto.com.pt",
                            Fracao = "na",
                            Morada = "Rua da Restauração",
                            NomeEditora = "Porto",
                            NumeroPorta = 365,
                            Telefone = 226088322,
                            WebSite = "www.portoeditora.pt"
                        },
                        new
                        {
                            EditoraId = 2,
                            CodigoPostal = 1500499,
                            Email = "bertrand@editoa.com.pt",
                            Fracao = "na",
                            Morada = "Rua Professor Jorge Silva Horta",
                            NomeEditora = "Bertrand Editora",
                            NumeroPorta = 1,
                            Telefone = 217626000,
                            WebSite = "www.bertrandeditora.pt"
                        },
                        new
                        {
                            EditoraId = 3,
                            CodigoPostal = 42610038,
                            Email = "leya@editora.com.pt",
                            Fracao = "na",
                            Morada = "Rua Cidade de Córdova",
                            NomeEditora = "Leya",
                            NumeroPorta = 2,
                            Telefone = 214272200,
                            WebSite = "www.leya.com"
                        });
                });

            modelBuilder.Entity("MvcLivraria.Models.Livro", b =>
                {
                    b.Property<int>("LivroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Ano")
                        .HasColumnType("int");

                    b.Property<int?>("EditoraId")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("LivroId");

                    b.HasIndex("EditoraId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Livro");

                    b.HasData(
                        new
                        {
                            LivroId = 1,
                            Ano = 1995,
                            EditoraId = 1,
                            Genero = "Romance",
                            Preco = 17m,
                            Quantidade = 100,
                            Titulo = "Ensaio sobre a Cegueira"
                        },
                        new
                        {
                            LivroId = 2,
                            Ano = 1946,
                            EditoraId = 2,
                            Genero = "Poesia",
                            Preco = 18m,
                            Quantidade = 150,
                            Titulo = "Poemas Completos de Alberto Caeiro"
                        },
                        new
                        {
                            LivroId = 3,
                            Ano = 1878,
                            EditoraId = 3,
                            Genero = "Romance",
                            Preco = 8m,
                            Quantidade = 150,
                            Titulo = "O Primo Basílio"
                        },
                        new
                        {
                            LivroId = 4,
                            Ano = 1940,
                            EditoraId = 1,
                            Genero = "Poesia",
                            Preco = 10m,
                            Quantidade = 150,
                            Titulo = "Bichos"
                        });
                });

            modelBuilder.Entity("MvcLivraria.Models.Localidade", b =>
                {
                    b.Property<int>("LocalidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Local")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocalidadeId");

                    b.ToTable("Localidade");

                    b.HasData(
                        new
                        {
                            LocalidadeId = 1,
                            Local = "Lisboa"
                        },
                        new
                        {
                            LocalidadeId = 2,
                            Local = "Porto"
                        });
                });

            modelBuilder.Entity("MvcLivraria.Models.Requisicao", b =>
                {
                    b.Property<int>("RequisicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRequisicao")
                        .HasColumnType("datetime2");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.Property<int>("LocalidadeId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("RequisicaoId");

                    b.HasIndex("LivroId");

                    b.HasIndex("LocalidadeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Requisicao");

                    b.HasData(
                        new
                        {
                            RequisicaoId = 1,
                            DataDevolucao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRequisicao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LivroId = 2,
                            LocalidadeId = 1
                        },
                        new
                        {
                            RequisicaoId = 2,
                            DataDevolucao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRequisicao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LivroId = 1,
                            LocalidadeId = 2
                        },
                        new
                        {
                            RequisicaoId = 3,
                            DataDevolucao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRequisicao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LivroId = 4,
                            LocalidadeId = 1
                        },
                        new
                        {
                            RequisicaoId = 4,
                            DataDevolucao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRequisicao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LivroId = 3,
                            LocalidadeId = 2
                        });
                });

            modelBuilder.Entity("MvcLivraria.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BilheteIdentidade")
                        .HasColumnType("int");

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<int>("Contribuinte")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroPorta")
                        .HasColumnType("int");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            BilheteIdentidade = 6666666,
                            CodigoPostal = 2825420,
                            Contribuinte = 294260250,
                            Email = "aecmar@hotmail.com",
                            Fracao = "anexo a",
                            Morada = "Rua Vitimas da Guerra",
                            NomeUsuario = "Alexandre Couto",
                            NumeroPorta = 30,
                            Telefone = 222222222
                        },
                        new
                        {
                            UsuarioId = 2,
                            BilheteIdentidade = 7777777,
                            CodigoPostal = 1234567,
                            Contribuinte = 289076145,
                            Email = "jg@hotmail.com",
                            Fracao = "na",
                            Morada = "Rua Lisboa",
                            NomeUsuario = "João Golçalves",
                            NumeroPorta = 40,
                            Telefone = 333333333
                        },
                        new
                        {
                            UsuarioId = 3,
                            BilheteIdentidade = 8888888,
                            CodigoPostal = 7654321,
                            Contribuinte = 876956456,
                            Email = "apjose@hotmail.com",
                            Fracao = "2E",
                            Morada = "Rua Almirante reis",
                            NomeUsuario = "Pedro Jose",
                            NumeroPorta = 3,
                            Telefone = 444444444
                        });
                });

            modelBuilder.Entity("MvcLivraria.Models.Autoria", b =>
                {
                    b.HasOne("MvcLivraria.Models.Autor", "Autor")
                        .WithMany("Autorias")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcLivraria.Models.Livro", "Livro")
                        .WithMany("Autorias")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("MvcLivraria.Models.Livro", b =>
                {
                    b.HasOne("MvcLivraria.Models.Editora", "Editora")
                        .WithMany("Livros")
                        .HasForeignKey("EditoraId");

                    b.HasOne("MvcLivraria.Models.Usuario", null)
                        .WithMany("Livros")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Editora");
                });

            modelBuilder.Entity("MvcLivraria.Models.Requisicao", b =>
                {
                    b.HasOne("MvcLivraria.Models.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcLivraria.Models.Localidade", "Localidade")
                        .WithMany()
                        .HasForeignKey("LocalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcLivraria.Models.Usuario", null)
                        .WithMany("Requisicoes")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Livro");

                    b.Navigation("Localidade");
                });

            modelBuilder.Entity("MvcLivraria.Models.Autor", b =>
                {
                    b.Navigation("Autorias");
                });

            modelBuilder.Entity("MvcLivraria.Models.Editora", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("MvcLivraria.Models.Livro", b =>
                {
                    b.Navigation("Autorias");
                });

            modelBuilder.Entity("MvcLivraria.Models.Usuario", b =>
                {
                    b.Navigation("Livros");

                    b.Navigation("Requisicoes");
                });
#pragma warning restore 612, 618
        }
    }
}
